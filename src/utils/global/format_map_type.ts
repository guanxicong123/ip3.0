import i18n from "@/utils/language";

const $t: any = i18n.global;

const useFormatMap = {
  terminalsOptions: [
    { value: 1, label: $t.t("Common terminal") },
    { value: 2, label: $t.t("Intercom terminal") },
    { value: 3, label: $t.t("Acquisition terminal") },
    { value: 4, label: $t.t("Backup terminal") },
    { value: 5, label: $t.t("Scheduled task backup terminal") },
    { value: 6, label: $t.t("Server terminal") },
    { value: 7, label: $t.t("Lighting terminal") },
    { value: 8, label: $t.t("Time terminal") },
    { value: 9, label: $t.t("Conversion terminal") },
    { value: 10, label: $t.t("Partition terminal") },
    { value: 11, label: $t.t("Virtual terminal") },
    { value: 12, label: $t.t("LED terminal") },
    { value: 13, label: $t.t("Monitoring terminal") },
    { value: 14, label: $t.t("Amplifier terminal") },
  ],
  terminalsMap: new Map([
    [1, $t.t("Common terminal")],
    [2, $t.t("Intercom terminal")],
    [3, $t.t("Acquisition terminal")],
    [4, $t.t("Backup terminal")],
    [5, $t.t("Scheduled task backup terminal")],
    [6, $t.t("Server terminal")],
    [7, $t.t("Lighting terminal")],
    [8, $t.t("Time terminal")],
    [9, $t.t("Conversion terminal")],
    [10, $t.t("Partition terminal")],
    [11, $t.t("Virtual terminal")],
    [12, $t.t("LED terminal")],
    [13, $t.t("Monitoring terminal")],
    [14, $t.t("Amplifier terminal")],
  ]),
  terminalStatusOptions: [
    { value: -1, label: $t.t("All status") },
    { value: 1, label: $t.t("Idle") },
    { value: 2, label: $t.t("Busy") },
    { value: 3, label: $t.t("Fault") },
    { value: 4, label: $t.t("Freeze") },
    { value: 0, label: $t.t("Offline") },
  ],
  terminalsStatusMap: new Map([
    [0, { name: $t.t("Offline"), class: "icon-off-line offline" }],
    [1, { name: $t.t("Idle"), class: "icon-on-line online" }],
    [2, { name: $t.t("Busy"), class: "icon-executing busy" }],
    [3, { name: $t.t("Fault"), class: "icon-fault red" }],
    [4, { name: $t.t("Freeze"), class: "icon-freeze freeze" }],
  ]),
  platformMap: new Map([
    ["7700", { name: $t.t("77 series"), class: "icon-IP-77" }],
    ["8800", { name: $t.t("88 series"), class: "icon-IP-88" }],
    ["7300", { name: $t.t("73 series"), class: "icon-emergency-73" }],
    ["7800", { name: $t.t("78 series"), class: "icon-cloud-78" }],
  ]),
  taskTypeOptions: [
    { value: 1, label: $t.t("Fire alarm") },
    { value: 3, label: $t.t("Call the police") },
    { value: 4, label: $t.t("Intercom") },
    { value: 5, label: $t.t("Broadcast") },
    { value: 6, label: $t.t("Telephone broadcasting") },
    { value: 2, label: $t.t("Emergency intercom") },
    { value: 18, label: $t.t("Timing patrol") },
    { value: 7, label: $t.t("Timing task") },
    { value: 8, label: $t.t("Timing bell rings") },
    { value: 11, label: $t.t("Remote control task") },
    { value: 12, label: $t.t("Text play") },
    { value: 9, label: $t.t("Short circuit input") },
    { value: 10, label: $t.t("Tamper alarm") },
    { value: 13, label: $t.t("Sound card acquisition") },
    { value: 14, label: $t.t("Terminal acquisition") },
    { value: 15, label: $t.t("Music play") },
    { value: 16, label: $t.t("Terminal on-demand") },
    { value: 17, label: $t.t("Environmental monitoring") },
    { value: 19, label: $t.t("Task monitoring") },
  ],
  taskTypeMap: new Map([
    [1, $t.t("Fire alarm")],
    [2, $t.t("Emergency intercom")],
    [3, $t.t("Call the police")],
    [4, $t.t("Intercom")],
    [5, $t.t("Broadcast")],
    [6, $t.t("Telephone broadcasting")],
    [7, $t.t("Timing task")],
    [8, $t.t("Timing bell rings")],
    [9, $t.t("Short circuit input")],
    [10, $t.t("Tamper alarm")],
    [11, $t.t("Remote control task")],
    [12, $t.t("Text play")],
    [13, $t.t("Sound card acquisition")],
    [14, $t.t("Terminal acquisition")],
    [15, $t.t("Music play")],
    [16, $t.t("Terminal on-demand")],
    [17, $t.t("Environmental monitoring")],
    [18, $t.t("Timing patrol")],
    [19, $t.t("Task monitoring")],
    [20, $t.t("Local task")],
  ]),
  serversTypeOptions: [
    { value: "0X00", label: $t.t("Control service") },
    { value: "0X01", label: $t.t("Relay service") },
    { value: "0X02", label: $t.t("Preemptive service") },
    { value: "0X04", label: $t.t("Media distribution service") },
    { value: "0X08", label: $t.t("Voice service") },
    { value: "0X10", label: $t.t("Scheduled service") },
    { value: "0X20", label: $t.t("Business service") },
    { value: "0X40", label: $t.t("Client service") },
    { value: "0X80", label: $t.t("Recording service") },
  ],
  serversTypeMap: new Map([
    ["0X00", $t.t("Control service")],
    ["0X01", $t.t("Relay service")],
    ["0X02", $t.t("Preemptive service")],
    ["0X04", $t.t("Media distribution service")],
    ["0X08", $t.t("Voice service")],
    ["0X10", $t.t("Scheduled service")],
    ["0X20", $t.t("Business service")],
    ["0X40", $t.t("Client service")],
    ["0X80", $t.t("Recording service")],
  ]),
  serversStatusOptions: [
    { value: -1, label: $t.t("All status") },
    { value: 1, label: $t.t("Online") },
    { value: 0, label: $t.t("Offline") },
    { value: 2, label: $t.t("Abnormal") },
  ],
  serversStatusMap: new Map([
    [0, $t.t("Offline")],
    [1, $t.t("Online")],
    [2, $t.t("Abnormal")],
  ]),
  playModelOption: [
    { value: 0, label: $t.t("List play") },
    { value: 1, label: $t.t("Loop play") },
    { value: 2, label: $t.t("Shuffle play") },
  ],
  playModelMap: new Map([
    [0, $t.t("List play")],
    [1, $t.t("Loop play")],
    [2, $t.t("Shuffle play")],
  ]),
  qualityOption: [
    { value: 1, label: $t.t("Primary") },
    { value: 2, label: $t.t("Intermediate") },
    { value: 3, label: $t.t("Senior") },
  ],
  soundQualityMap: new Map([
    [1, $t.t("Primary")],
    [2, $t.t("Intermediate")],
    [3, $t.t("Senior")],
  ]),
  usersTypeMap: new Map([
    [0, $t.t("System administrator")],
    [1, $t.t("Super administrator")],
    [2, $t.t("Administrator")],
    [3, $t.t("Ordinary users")],
  ]),
  audioSourceTypeOptions: [
    { value: 0, label: $t.t("All sound sources") },
    { value: 1, label: $t.t("Music play") },
    { value: 23, label: $t.t("Sound source acquisition") },
    // { value: 2, label: $t.t("Sound card acquisition") },
    // { value: 3, label: $t.t("Terminal acquisition") },
    { value: 4, label: $t.t("Fast sound source") },
    { value: 5, label: $t.t("Text play") },
  ],
  audioSourceTypeMap: new Map([
    [1, $t.t("Music play")],
    [2, $t.t("Sound card acquisition")],
    [3, $t.t("Terminal acquisition")],
    [4, $t.t("Fast sound source")],
    [5, $t.t("Text play")],
    [23, $t.t("Sound source acquisition")],
  ]),
  weeksTypeMap: new Map([
    [1, $t.t("Mon")],
    [2, $t.t("Tues")],
    [3, $t.t("Wed")],
    [4, $t.t("Thurs")],
    [5, $t.t("Fri")],
    [6, $t.t("Sat")],
    [7, $t.t("Sun")],
  ]),
  logLevelTypeMap: new Map([
    [1, $t.t("Information")],
    [2, $t.t("Warning")],
    [3, $t.t("Error")],
    [4, $t.t("Deadly")],
  ]),
  // 参考公共协议说明文档-播放模式
  WSTaskPlayMode: new Map([
    [0, "normal_play"],
    [1, "loop_play"],
    [2, "random_play"],
  ]),
  WSTaskPlayModeWeb: new Map([
    ["normal_play", 0],
    ["loop_play", 1],
    ["random_play", 2],
  ]),
  registerMap: new Map([
    [-1, "操作失败"],
    [0, "操作成功"],
    [1, "注册成功(永久)"],
    [2, "注册成功(临时)"],
    [3, "加密狗错误"],
    [4, "加密狗错误"],
    [5, "加密狗错误"],
    [6, "加密狗错误"],
    [7, "加密狗错误"],
    [8, "加密狗错误"],
    [9, "加密狗错误"],
    [10, "注册码过期"],
    [11, "系统时间错误"],
    [12, "注册码重复"],
    [13, "读写权限不足"],
    [14, "注册码不匹配"],
  ]),
};

export default useFormatMap;
